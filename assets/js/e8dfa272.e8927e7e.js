"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8868],{9750:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var t=n(4848),i=n(8453);const r={sidebar_position:7},s="How to modify the login and/or registration form timeout",a={id:"howto/how-to-modify-the-login-and-or-registration-form-timeout",title:"How to modify the login and/or registration form timeout",description:"Task",source:"@site/docs/howto/how-to-modify-the-login-and-or-registration-form-timeout.md",sourceDirName:"howto",slug:"/howto/how-to-modify-the-login-and-or-registration-form-timeout",permalink:"/LmcUser/docs/howto/how-to-modify-the-login-and-or-registration-form-timeout",draft:!1,unlisted:!1,editUrl:"https://github.com/lm-commons/lmcuser/tree/master/docs/docs/howto/how-to-modify-the-login-and-or-registration-form-timeout.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"documentationSidebar",previous:{title:"How to choose which user fields are used during authentication",permalink:"/LmcUser/docs/howto/how-to-choose-which-user-fields-are-used-during-authentication"},next:{title:"How to check if the user is logged in",permalink:"/LmcUser/docs/howto/how-to-check-if-the-user-is-logged-in"}},l={},c=[{value:"Task",id:"task",level:2},{value:"Solution",id:"solution",level:2},{value:"Note",id:"note",level:3},{value:"Note",id:"note-1",level:3}];function d(e){const o={code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(o.h1,{id:"how-to-modify-the-login-andor-registration-form-timeout",children:"How to modify the login and/or registration form timeout"}),"\n",(0,t.jsx)(o.h2,{id:"task",children:"Task"}),"\n",(0,t.jsx)(o.p,{children:"The login/registration form timeout is too small and needs to be extended."}),"\n",(0,t.jsx)(o.h2,{id:"solution",children:"Solution"}),"\n",(0,t.jsxs)(o.p,{children:["To simply extend the login or registration form timeout, create a local configuration file inside the project (ex: ",(0,t.jsx)(o.code,{children:"/config/autoload/lmcuser.local.php"}),") and add the necessary configuration options. For example, to allow the login form to live for 30 minutes before expiring :"]}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-php",children:"return [\n    'lmc_user' => [\n        'login_form_timeout' => 1800,\n    ],\n];\n"})}),"\n",(0,t.jsx)(o.h3,{id:"note",children:"Note"}),"\n",(0,t.jsxs)(o.p,{children:["The registration form's option is ",(0,t.jsx)(o.code,{children:"user_form_timeout"}),"."]}),"\n",(0,t.jsxs)(o.p,{children:["For very long TTL, instead of setting a very high timeout value, it is also possible to refresh the CSRF field value via Ajax. To do so, create a controller and a route to it. For example, we may want to map ",(0,t.jsx)(o.code,{children:"/user/login/keep-alive"})," to this controller action :"]}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-php",children:"<?php\nnamespace FooModule\\Controller\n\nuse Laminas\\Mvc\\Controller\\ActionController,\n    Laminas\\View\\Model\\ViewModel;\n\nclass BarController extends ActionController\n{\n    public function keepAliveAction()\n    {\n        $loginForm = $this->getServiceLocator()->get('lmcuser_login_form');\n        return new JsonModel([\n            'timestamp' => strtotime('now'),\n            'hash' => $loginForm->get('csrf')->getValidator()->getHash(true),\n        ]);\n    }\n}\n"})}),"\n",(0,t.jsxs)(o.p,{children:["Then, in your module config, add the ",(0,t.jsx)(o.code,{children:"JsonStrategy"})]}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-php",children:"    'view_manager' => [\n        // ... other configs\n        'strategies' => [\n            'ViewJsonStrategy',\n        ],\n    ],\n"})}),"\n",(0,t.jsx)(o.p,{children:"and, finally, in your view script (assuming jQuery is used)"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-js",children:"function pingLoginForm() {\n    setTimeout(function() {\n        $.getJSON(\"<?php echo $this->url('keep-alive-route-name'); ?>\", function(data) {\n            if (data.timestamp) {\n                $(':hidden[name=\"csrf\"]').val(data.hash);\n            }\n        });\n        pingLoginForm();\n    }, 302000); // 5 minutes + 2 seconds\n}\npingLoginForm();\n"})}),"\n",(0,t.jsx)(o.h3,{id:"note-1",children:"Note"}),"\n",(0,t.jsx)(o.p,{children:"The Javascript timer timeout value may be set via the lmc_user config by setting the view model the proper value from the controller (Laminas MVC v2 only)"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-php",children:"<?php\n$timeout = $this->getServiceLocator()->get('lmcuser_module_options')->getLoginFormTimeout();\nreturn new ViewModel([\n     // ...\n    'loginFormTimeout' => $timeout,\n]);\n"})})]})}function h(e={}){const{wrapper:o}={...(0,i.R)(),...e.components};return o?(0,t.jsx)(o,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,o,n)=>{n.d(o,{R:()=>s,x:()=>a});var t=n(6540);const i={},r=t.createContext(i);function s(e){const o=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function a(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(r.Provider,{value:o},e.children)}}}]);