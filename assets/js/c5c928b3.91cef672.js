"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6640],{5050:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>d,frontMatter:()=>s,metadata:()=>a,toc:()=>u});var r=n(4848),o=n(8453);const s={sidebar_position:5},c="How to perform a custom action when a new user account is created",a={id:"howto/how-to-perform-a-custom-action-when-a-new-user-account-is-created",title:"How to perform a custom action when a new user account is created",description:"Task",source:"@site/docs/howto/how-to-perform-a-custom-action-when-a-new-user-account-is-created.md",sourceDirName:"howto",slug:"/howto/how-to-perform-a-custom-action-when-a-new-user-account-is-created",permalink:"/LmcUser/docs/howto/how-to-perform-a-custom-action-when-a-new-user-account-is-created",draft:!1,unlisted:!1,editUrl:"https://github.com/lm-commons/lmcuser/tree/master/docs/docs/howto/how-to-perform-a-custom-action-when-a-new-user-account-is-created.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"documentationSidebar",previous:{title:"How to store custom form values into your user entity at registration",permalink:"/LmcUser/docs/howto/how-to-store-custom-form-values-into-your-user-entity-at-registration"},next:{title:"How to choose which user fields are used during authentication",permalink:"/LmcUser/docs/howto/how-to-choose-which-user-fields-are-used-during-authentication"}},i={},u=[{value:"Task",id:"task",level:2},{value:"Solution",id:"solution",level:2},{value:"Retrieving the User Id",id:"retrieving-the-user-id",level:2},{value:"Example",id:"example",level:2}];function h(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"how-to-perform-a-custom-action-when-a-new-user-account-is-created",children:"How to perform a custom action when a new user account is created"})}),"\n",(0,r.jsx)(t.h2,{id:"task",children:"Task"}),"\n",(0,r.jsx)(t.p,{children:"Perform a custom action when a new user account is created."}),"\n",(0,r.jsx)(t.h2,{id:"solution",children:"Solution"}),"\n",(0,r.jsxs)(t.p,{children:["The user service (",(0,r.jsx)(t.code,{children:"lmcuser_user_service"}),") provided by LmcUser triggers an event (",(0,r.jsx)(t.code,{children:"register"}),") immediately before persisting the user account."]}),"\n",(0,r.jsx)(t.p,{children:"If you have access to the service locator which LmcUser has previously loaded it's services into, you can simply pull the user service and attach an event to it's internal event manager."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-php",children:"<?php\n$lmcServiceEvents = $locator->get('lmcuser_user_service')->getEventManager();\n$lmcServiceEvents->attach('register', function($e) {\n    $user = $e->getParam('user');  // User account object\n    $form = $e->getParam('form');  // Form object\n    // Perform your custom action here\n});\n"})}),"\n",(0,r.jsx)(t.p,{children:"If you can't get access to the user service instance directly, you can use the StaticEventManager to attach an event directly via the class name:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-php",children:"<?php\n$em = \\Laminas\\EventManager\\StaticEventManager::getInstance();\n$em->attach('LmcUser\\Service\\User', 'register', function($e) {\n    $user = $e->getParam('user');  // User account object\n    $form = $e->getParam('form');  // Form object\n    // Perform your custom action here\n});\n"})}),"\n",(0,r.jsx)(t.h2,{id:"retrieving-the-user-id",children:"Retrieving the User Id"}),"\n",(0,r.jsxs)(t.p,{children:["If you need to retrieve the ",(0,r.jsx)(t.code,{children:"user_id"}),", just attach to ",(0,r.jsx)(t.code,{children:"register.post"})," and the user entity should have it."]}),"\n",(0,r.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,r.jsx)(t.p,{children:"File: module/Application/Module.php"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-php",children:"<?php\nclass Module\n{\n    public function onBootstrap(MvcEvent $e)\n    {\n        $em = \\Laminas\\EventManager\\StaticEventManager::getInstance();\n        $em->attach('LmcUser\\Service\\User', 'register', function($e) {\n            $user = $e->getParam('user');  // User account object\n            $form = $e->getParam('form');  // Form object\n            // Perform your custom action here\n        });\n    }\n}\n"})})]})}function d(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>a});var r=n(6540);const o={},s=r.createContext(o);function c(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);